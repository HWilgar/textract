{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,I,E,I,A,G,E,E,W,C,E,a,C,C,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,GCVA,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,wT,I,E,C,EEA5F,EAAiB,IAAA,IAAoB,uCAAA,YAAA,GAAA,EAAwC,QAAQ,G,I,E,C,ECArF,EAAiB,IAAA,IAAoB,4CAAA,YAAA,GAAA,EAA6C,QAAQ,G,I,E,C,ECA1F,EAAiB,IAAA,IAAoB,gDAAA,YAAA,GAAA,EAAiD,QAAQ,G,I,E,C,ECA9F,EAAiB,IAAA,IAAoB,kDAAA,YAAA,GAAA,EAAmD,QAAQ,G,I,E,C,ECAhG,EAAiB,IAAA,IAAoB,wCAAA,YAAA,GAAA,EAAyC,QAAQ,GLMtF,SAAS,gBAAgB,CAAC,mBAAoB,eAiBxC,EAAQ,EAAQ,EAAY,EAAa,EAAW,EAfxD,IAAM,EAAW,SAAS,aAAa,CAAC,cAClC,EAAY,SAAS,aAAa,CAAC,kBAEnC,EAAa,SAAS,aAAa,CAAC,oBACpC,EAAc,SAAS,aAAa,CAAC,cACrC,EAAa,SAAS,aAAa,CAAC,gBAEpC,EAAY,SAAS,aAAa,CAAC,mBACnC,EAAiB,SAAS,aAAa,CAAC,eACxC,EAAW,SAAS,aAAa,CAAC,aAClC,EAAa,SA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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-e13555ef4c871745.js","script.js","node_modules/@parcel/runtime-js/lib/runtime-7b526850901c6d0d.js","node_modules/@parcel/runtime-js/lib/runtime-1a9995c590dc1ba7.js","node_modules/@parcel/runtime-js/lib/runtime-8ad8cffa5f760ff7.js","node_modules/@parcel/runtime-js/lib/runtime-1b914e0361893407.js","node_modules/@parcel/runtime-js/lib/runtime-7721c023a264e15d.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire716c\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire716c\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $333d4d0412d24fb7$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"5SCbD\",\"index.8888cba9.js\",\"5ZFkQ\",\"copy-w.315905f0.png\",\"ctiqG\",\"download-w2.88454de6.png\",\"jhLjc\",\"expand-arrows-w.79c8a13c.png\",\"aUa2Q\",\"minimize-arrows-w.e32ef0f5.png\",\"liXE3\",\"close-w.5e896fd7.png\"]'));\n\nvar $26268f7546ab038c$exports = {};\n$26268f7546ab038c$exports = new URL(\"copy-w.315905f0.png\", import.meta.url).toString();\n\n\nvar $48ae25e6176b1777$exports = {};\n$48ae25e6176b1777$exports = new URL(\"download-w2.88454de6.png\", import.meta.url).toString();\n\n\nvar $d4748b78fbc2b0d0$exports = {};\n$d4748b78fbc2b0d0$exports = new URL(\"expand-arrows-w.79c8a13c.png\", import.meta.url).toString();\n\n\nvar $608cbf9e4ac600bc$exports = {};\n$608cbf9e4ac600bc$exports = new URL(\"minimize-arrows-w.e32ef0f5.png\", import.meta.url).toString();\n\n\nvar $aafbeb1f91a156f6$exports = {};\n$aafbeb1f91a156f6$exports = new URL(\"close-w.5e896fd7.png\", import.meta.url).toString();\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const dropArea = document.querySelector(\"#drop-zone\");\n    const container = document.querySelector(\"#img-container\");\n    const howtoModal = document.querySelector(\"#howto-container\");\n    const howtoButton = document.querySelector(\"#howto-btn\");\n    const closeHowto = document.querySelector(\"#close-howto\");\n    const cropModal = document.querySelector(\"#crop-container\");\n    const closeCropModal = document.querySelector(\"#close-crop\");\n    const cropArea = document.querySelector(\"#cropArea\");\n    const cropButton = document.querySelector(\"#cropButton\");\n    const resizeHandles = document.querySelectorAll(\".resizeHandle\");\n    let isResizing = false;\n    let isMoving = false;\n    let startX, startY, startWidth, startHeight, startLeft, startTop;\n    let currentHandle = null;\n    let lastClickedDiv = null;\n    let unconvertedImages = 0;\n    // -------------------------------------------------- Drop and Drag\n    [\n        \"dragenter\",\n        \"dragover\",\n        \"dragleave\",\n        \"drop\"\n    ].forEach((eventName)=>{\n        dropArea.addEventListener(eventName, preventDefaults, false);\n    });\n    [\n        \"dragenter\",\n        \"dragover\"\n    ].forEach((eventName)=>{\n        dropArea.addEventListener(eventName, highlight, false);\n    });\n    [\n        \"dragleave\",\n        \"drop\"\n    ].forEach((eventName)=>{\n        dropArea.addEventListener(eventName, unhighlight, false);\n    });\n    dropArea.addEventListener(\"drop\", handleDrop, false);\n    function preventDefaults(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n    function highlight(e) {\n        dropArea.classList.add(\"dragover\");\n    }\n    function unhighlight(e) {\n        dropArea.classList.remove(\"dragover\");\n    }\n    function handleDrop(e) {\n        let dt = e.dataTransfer;\n        let files = dt.files;\n        handleFiles(files);\n    }\n    function handleFiles(files) {\n        [\n            ...files\n        ].forEach(uploadFile);\n    }\n    const textarea = document.createElement(\"textarea\");\n    const resultDiv = document.querySelector(\"#result\");\n    // -------------------------------------------------- Browse Files\n    document.querySelector(\"#img-upload\").addEventListener(\"change\", function(e) {\n        const files = e.target.files;\n        const container = document.querySelector(\"#img-container\");\n        for(let i = 0; i < files.length; i++){\n            const file = files[i];\n            uploadFile(file);\n        }\n    });\n    // -------------------------------------------------- Upload Files\n    function uploadFile(file) {\n        const reader = new FileReader();\n        reader.onload = function(e) {\n            const fileName = file.name;\n            const fileType = file.type;\n            const src = e.target.result;\n            createFileEntry(fileName, fileType, src);\n            toggleHide();\n        };\n        reader.readAsDataURL(file);\n    }\n    // -------------------------------------------------- Convert Button  \n    document.querySelector(\"#convert-btn\").addEventListener(\"click\", async function() {\n        const divContainers = document.querySelectorAll(\".img-preview\");\n        const convertBtn = document.querySelector(\"#convert-btn\");\n        const text = convertBtn.querySelector(\".convert-text\");\n        convertBtn.disabled = true;\n        text.textContent = \"Converting...\";\n        for (const div of divContainers){\n            const img = div.querySelector(\"img\");\n            const imageSrc = img.src;\n            if (img && !div.hasAttribute(\"converted\") && !div.hasAttribute(\"invalid\")) {\n                unconvertedImages--;\n                const id = div.id.replace(\"image\", \"\");\n                const progressBar = document.createElement(\"div\");\n                progressBar.id = \"progress-bar\" + id;\n                progressBar.classList.add(\"progress-bar\");\n                const bar = document.createElement(\"span\");\n                bar.classList.add(\"bar\");\n                const progress = document.createElement(\"span\");\n                progress.classList.add(\"progress\");\n                bar.appendChild(progress);\n                progressBar.appendChild(bar);\n                const imgContent = document.querySelector(`#img-content${id}`);\n                const message = imgContent.querySelector(\".uploaded\");\n                message.remove();\n                imgContent.appendChild(progressBar);\n                await sendImageToVisionAPI(imageSrc, id);\n            }\n        }\n        convertBtn.disabled = false;\n        text.textContent = \"Convert\";\n        toggleHide();\n    });\n    // -------------------------------------------------- Convert Image to Text\n    async function sendImageToVisionAPI(base64Image, currentImage) {\n        // const apiKey = 'QUl6YVN5Qnk5NjF5alNyNnVxM21RTGZKaEhzbVZVWXlTY0hFdDc4';\n        const apiUrl = `https://vision.googleapis.com/v1/images:annotate?key=${atob(\"QUl6YVN5Qnk5NjF5alNyNnVxM21RTGZKaEhzbVZVWXlTY0hFdDc4\")}`;\n        const requestBody = {\n            requests: [\n                {\n                    image: {\n                        content: base64Image.split(\",\")[1]\n                    },\n                    features: [\n                        {\n                            type: \"DOCUMENT_TEXT_DETECTION\"\n                        }\n                    ]\n                }\n            ]\n        };\n        try {\n            const response = await fetch(apiUrl, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(requestBody)\n            });\n            const data = await response.json();\n            resultDiv.innerHTML = \"\";\n            if (data.responses && data.responses.length > 0) {\n                const annotations = data.responses[0].textAnnotations;\n                if (annotations && annotations.length > 0) contentBoard(currentImage, annotations);\n                else noTextDetected(currentImage);\n                const progressBar = document.querySelector(\"#progress-bar\" + currentImage);\n                progressBar.remove();\n            } else resultDiv.textContent = \"Error processing the image.\";\n        } catch (error) {\n            conversionFail(currentImage);\n        }\n    }\n    // -------------------------------------------------- Create uploaded item entries\n    function createFileEntry(fileName, fileType, src) {\n        const id = Date.now();\n        const imgContent = document.createElement(\"div\");\n        imgContent.id = `img-content${id}`;\n        imgContent.className = \"img-content-wrap\";\n        const img = document.createElement(\"img\");\n        img.className = \"img-selected\";\n        img.setAttribute(\"uploaded\", \"true\");\n        img.draggable = false;\n        img.src = src;\n        const imgWrapper = document.createElement(\"div\");\n        imgWrapper.className = \"img-wrapper\";\n        imgWrapper.id = `container${id}`;\n        imgWrapper.addEventListener(\"click\", ()=>selectedContainer(id));\n        const fileNameDiv = document.createElement(\"div\");\n        const fileNameHolder = document.createElement(\"span\");\n        fileNameDiv.className = \"file-name\";\n        fileNameDiv.id = `file-name${id}`;\n        let imageName = fileName;\n        if (imageName.length > 31) imageName = limitFilename(fileName);\n        fileNameHolder.textContent = imageName;\n        fileNameDiv.appendChild(fileNameHolder);\n        imgContent.appendChild(fileNameDiv);\n        const preview = document.createElement(\"div\");\n        preview.className = \"img-preview\";\n        preview.id = `image${id}`;\n        preview.appendChild(img);\n        imgWrapper.appendChild(preview);\n        imgWrapper.appendChild(imgContent);\n        if (container.firstChild) container.insertBefore(imgWrapper, container.firstChild);\n        else container.appendChild(imgWrapper);\n        isValidFile(fileType, preview, imgContent, src, id);\n        const removeDiv = removeBtn(id);\n        imgWrapper.appendChild(removeDiv);\n    }\n    // -------------------------------------------------- Check file validity\n    function isValidFile(fileType, preview, imgContent, src, id) {\n        const isImage = fileType.startsWith(\"image/\");\n        const message = document.createElement(\"span\");\n        console.log(isImage);\n        if (!isImage) {\n            console.log(\"invalid\");\n            preview.setAttribute(\"invalid\", \"true\");\n            message.className = \"error\";\n            message.textContent = \"Invalid file.\";\n            imgContent.appendChild(message);\n        } else {\n            unconvertedImages++;\n            const crop = document.createElement(\"span\");\n            crop.textContent = \"crop\";\n            preview.appendChild(crop);\n            preview.classList.add(\"crop\");\n            message.className = \"uploaded\";\n            message.textContent = \"File uploaded.\";\n            imgContent.appendChild(message);\n            preview.addEventListener(\"click\", function() {\n                croppingModal(src);\n            });\n        }\n    }\n    // -------------------------------------------------- format file name display\n    function limitFilename(filename) {\n        const lastDotIndex = filename.lastIndexOf(\".\");\n        const firstPart = filename.substring(0, 15);\n        const lastPart = filename.length > 10 ? filename.substring(filename.length - 10) : \"\";\n        return firstPart + \"...\" + lastPart;\n    }\n    // -------------------------------------------------- display identifier to selected item\n    function selectedContainer(id) {\n        const selectedContainer = document.querySelector(`#container${id}`);\n        if (lastClickedDiv && lastClickedDiv !== selectedContainer) lastClickedDiv.classList.toggle(\"shadow\");\n        else if (selectedContainer === null || selectedContainer === undefined) return;\n        selectedContainer.classList.add(\"shadow\");\n        lastClickedDiv = selectedContainer;\n    }\n    // -------------------------------------------------- Image converted\n    function uploadContent(id, content) {\n        const img = document.querySelector(`#image${id}`);\n        img.setAttribute(\"converted\", \"true\");\n        const textarea = document.createElement(\"textarea\");\n        textarea.innerHTML = content;\n        textarea.style.resize = \"none\";\n        return textarea;\n    }\n    // -------------------------------------------------- Text Detection Error\n    function noTextDetected(id) {\n        const img = document.querySelector(`#image${id}`);\n        img.setAttribute(\"converted\", \"true\");\n        const errorMsg = document.createElement(\"span\");\n        errorMsg.textContent = \"No text detected.\";\n        const imgContent = document.querySelector(`#img-content${id}`);\n        imgContent.appendChild(errorMsg);\n    }\n    // -------------------------------------------------- Conversion Fail Error\n    function conversionFail(id) {\n        const img = document.querySelector(`#image${id}`);\n        img.setAttribute(\"converted\", \"true\");\n        const errorMsg = document.createElement(\"span\");\n        errorMsg.textContent = \"Failed to convert. Check Internet Connection.\";\n        const imgContent = document.querySelector(`#img-content${id}`);\n        imgContent.appendChild(errorMsg);\n        const progressBar = document.querySelector(\"#progress-bar\" + id);\n        progressBar.remove();\n    }\n    // -------------------------------------------------- Create items buttons\n    function contentBoard(id, annotations) {\n        const content = annotations[0].description;\n        const btnWrap = document.createElement(\"div\");\n        btnWrap.className = \"btn-wrapper\";\n        const textarea = uploadContent(id, content);\n        const copyAll = copyAllBtn(id, btnWrap);\n        const download = downloadBtn(id, btnWrap);\n        const expand = expandBtn(id, btnWrap);\n        const imgContent = document.querySelector(`#img-content${id}`);\n        imgContent.appendChild(textarea);\n        textarea.id = \"textarea\" + id;\n        btnWrap.appendChild(download);\n        btnWrap.appendChild(copyAll);\n        btnWrap.appendChild(expand);\n        const title = document.querySelector(`#file-name${id}`);\n        title.classList.add(\"img-header\");\n        title.appendChild(btnWrap);\n        const remove = document.querySelector(`#remove${id}`);\n        const removeDiv = remove.parentNode;\n        removeDiv.classList.add(\"move-top\");\n    }\n    // -------------------------------------------------- Create copy all button\n    function copyAllBtn(id) {\n        const copyAll = document.createElement(\"button\");\n        copyAll.setAttribute(\"name\", \"copy-btn\");\n        copyAll.setAttribute(\"id\", `copy${id}`);\n        copyAll.classList.add(\"copy-btn\", \"tooltip\");\n        const copyImg = document.createElement(\"img\");\n        copyImg.src = (0, (/*@__PURE__*/$parcel$interopDefault($26268f7546ab038c$exports)));\n        copyImg.alt = \"Copy All\";\n        copyAll.appendChild(copyImg);\n        const tooltipCopy = document.createElement(\"span\");\n        tooltipCopy.className = \"tooltiptext\";\n        tooltipCopy.textContent = \"Copy\";\n        copyAll.appendChild(tooltipCopy);\n        copyAll.addEventListener(\"click\", function() {\n            copyAllText(id);\n        });\n        return copyAll;\n    }\n    // -------------------------------------------------- copy all items\n    function copyAllText(id) {\n        const text = document.querySelector(`#textarea${id}`).value;\n        navigator.clipboard.writeText(text).then(function() {}).catch(function(err) {\n            alert(\"Failed to copy text: \", err);\n        });\n        copiedAnimation(id);\n    }\n    // -------------------------------------------------- copied animation\n    function copiedAnimation(id) {\n        const button = document.querySelector(`#copy${id}`);\n        const img = button.querySelector(\"img\");\n        img.className = \"tick-img\";\n        img.style.animation = \"none\";\n        img.offsetWidth;\n        img.style.animation = \"checkAnimation 0.5s ease-out forwards\";\n        img.style.display = \"block\";\n        img.src = \"img/tick-w.png\";\n        setTimeout(function(id) {\n            img.src = \"img/copy-w.png\";\n        }, 1000);\n    }\n    // -------------------------------------------------- create download button\n    function downloadBtn(id) {\n        const download = document.createElement(\"button\");\n        download.setAttribute(\"name\", \"dload-btn\");\n        download.setAttribute(\"id\", `dload${id}`);\n        download.classList.add(\"download-btn\", \"tooltip\");\n        const downloadImg = document.createElement(\"img\");\n        downloadImg.src = (0, (/*@__PURE__*/$parcel$interopDefault($48ae25e6176b1777$exports)));\n        downloadImg.alt = \"Download Text FIle\";\n        download.appendChild(downloadImg);\n        const tooltipDownload = document.createElement(\"span\");\n        tooltipDownload.className = \"tooltiptext\";\n        tooltipDownload.textContent = \"Download\";\n        download.appendChild(tooltipDownload);\n        download.addEventListener(\"click\", function() {\n            downloadTextFile(id);\n        });\n        return download;\n    }\n    // -------------------------------------------------- create text file for download button\n    function downloadTextFile(id) {\n        const textContent = document.querySelector(`#textarea${id}`).value;\n        const blob = new Blob([\n            textContent\n        ], {\n            type: \"text/plain\"\n        });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = \"text_document.txt\";\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n    }\n    // -------------------------------------------------- create expand button\n    function expandBtn(id) {\n        const expand = document.createElement(\"button\");\n        expand.setAttribute(\"name\", \"expand-btn\");\n        expand.setAttribute(\"id\", `expand${id}`);\n        expand.classList.add(\"expand-btn\", \"tooltip\");\n        const expandImg = document.createElement(\"img\");\n        expandImg.src = (0, (/*@__PURE__*/$parcel$interopDefault($d4748b78fbc2b0d0$exports)));\n        expandImg.alt = \"Expand\";\n        expand.appendChild(expandImg);\n        const tooltipExpand = document.createElement(\"span\");\n        tooltipExpand.className = \"tooltiptext\";\n        tooltipExpand.textContent = \"Expand\";\n        expand.appendChild(tooltipExpand);\n        expand.addEventListener(\"click\", function() {\n            expandTextArea(id);\n        });\n        return expand;\n    }\n    // -------------------------------------------------- expanding and minimizing text area\n    function expandTextArea(id) {\n        const textarea = document.querySelector(`#textarea${id}`);\n        const expandMinimizeBtn = document.querySelector(`#expand${id}`);\n        const img = expandMinimizeBtn.querySelector(\"img\");\n        const tooltip = expandMinimizeBtn.querySelector(\".tooltiptext\");\n        if (textarea.scrollHeight <= textarea.clientHeight && textarea.scrollHeight <= 70) return;\n        else if (textarea.style.height === \"70px\" || textarea.style.height === \"\") {\n            textarea.style.height = \"auto\";\n            textarea.style.height = textarea.scrollHeight + \"px\";\n            img.src = (0, (/*@__PURE__*/$parcel$interopDefault($608cbf9e4ac600bc$exports)));\n            tooltip.textContent = \"Minimize\";\n        } else {\n            textarea.style.height = \"70px\";\n            img.src = (0, (/*@__PURE__*/$parcel$interopDefault($d4748b78fbc2b0d0$exports)));\n            tooltip.textContent = \"Expand\";\n        }\n    }\n    // -------------------------------------------------- create remove button\n    function removeBtn(id) {\n        const remove = document.createElement(\"button\");\n        remove.setAttribute(\"name\", \"remove-btn\");\n        remove.setAttribute(\"id\", `remove${id}`);\n        remove.classList.add(\"remove-btn\", \"tooltip\");\n        const removeImg = document.createElement(\"img\");\n        removeImg.src = (0, (/*@__PURE__*/$parcel$interopDefault($aafbeb1f91a156f6$exports)));\n        removeImg.alt = \"Remove file\";\n        remove.appendChild(removeImg);\n        const tooltip = document.createElement(\"span\");\n        tooltip.className = \"tooltiptext\";\n        tooltip.textContent = \"Remove\";\n        remove.appendChild(tooltip);\n        remove.addEventListener(\"click\", function() {\n            removeFile(id);\n        });\n        const removeDiv = document.createElement(\"div\");\n        removeDiv.className = \"remove-wrapper\";\n        removeDiv.appendChild(remove);\n        return removeDiv;\n    }\n    // -------------------------------------------------- remove item\n    function removeFile(id) {\n        const divToRemove = document.querySelector(`#container${id}`);\n        const imgDiv = document.querySelector(`#image${id}`);\n        const isInvalid = imgDiv.getAttribute(\"invalid\");\n        const isConverted = imgDiv.getAttribute(\"converted\");\n        const errorMsg = document.querySelector(\"#result\");\n        if (!isConverted && !isInvalid) unconvertedImages--;\n        if (divToRemove) {\n            if (lastClickedDiv !== null) {\n                lastClickedDiv.classList.remove(\"shadow\");\n                lastClickedDiv = null;\n            }\n            divToRemove.remove();\n        }\n        errorMsg.textContent = \"\";\n        toggleHide();\n    }\n    // -------------------------------------------------- hide convert button\n    function toggleHide() {\n        const convertBtn = document.querySelector(\".convert-btn\");\n        const tooltip = convertBtn.querySelector(\".tooltiptext-error\");\n        if (unconvertedImages === 0) {\n            if (tooltip.classList.contains(\"hidden\")) tooltip.classList.toggle(\"hidden\");\n            convertBtn.disabled = true;\n        } else {\n            if (convertBtn.classList.contains(\"hidden\")) convertBtn.classList.toggle(\"hidden\");\n            if (!tooltip.classList.contains(\"hidden\")) tooltip.classList.toggle(\"hidden\");\n            convertBtn.disabled = false;\n        }\n    }\n    // -------------------------------------------------- How to Use Modal\n    howtoButton.addEventListener(\"click\", function() {\n        howtoModal.style.display = \"block\";\n    });\n    closeHowto.addEventListener(\"click\", function() {\n        howtoModal.style.display = \"none\";\n    });\n    window.addEventListener(\"click\", function(event) {\n        if (event.target == howtoModal) howtoModal.style.display = \"none\";\n    });\n    // -------------------------------------------------- Crop Modal\n    closeCropModal.addEventListener(\"click\", function() {\n        removeCropImage();\n    });\n    window.addEventListener(\"click\", function(event) {\n        if (event.target == cropModal) removeCropImage();\n    });\n    // -------------------------------------------------- Set crop modal\n    function croppingModal(src) {\n        cropArea.style.width = \"75%\";\n        cropArea.style.height = \"75%\";\n        cropArea.style.left = \"20px\";\n        cropArea.style.top = \"20px\";\n        const img = document.createElement(\"img\");\n        img.className = \"img-selected\";\n        img.setAttribute(\"uploaded\", \"true\");\n        img.draggable = false;\n        img.src = src;\n        img.id = \"imageToCrop\";\n        const container = document.querySelector(\".image-to-crop-container\");\n        container.insertBefore(img, container.firstChild);\n        cropModal.style.display = \"block\";\n    }\n    // -------------------------------------------------- Reset Crop Modal\n    function removeCropImage() {\n        cropModal.style.display = \"none\";\n        const container = document.querySelector(\".image-to-crop-container\");\n        const image = document.querySelector(\"#imageToCrop\");\n        container.removeChild(image);\n    }\n    // -------------------------------------------------- Make the crop area movable\n    cropArea.addEventListener(\"mousedown\", function(e) {\n        if (e.target === cropArea) {\n            isMoving = true;\n            startX = e.clientX - cropArea.offsetLeft;\n            startY = e.clientY - cropArea.offsetTop;\n            document.addEventListener(\"mousemove\", moveCropArea);\n            document.addEventListener(\"mouseup\", stopMoving);\n        }\n    });\n    function moveCropArea(e) {\n        if (isMoving) {\n            const x = e.clientX - startX;\n            const y = e.clientY - startY;\n            cropArea.style.left = x + \"px\";\n            cropArea.style.top = y + \"px\";\n        }\n    }\n    function stopMoving() {\n        isMoving = false;\n        document.removeEventListener(\"mousemove\", moveCropArea);\n        document.removeEventListener(\"mouseup\", stopMoving);\n    }\n    resizeHandles.forEach((handle)=>{\n        handle.addEventListener(\"mousedown\", function(e) {\n            isResizing = true;\n            startX = e.clientX;\n            startY = e.clientY;\n            startWidth = cropArea.offsetWidth;\n            startHeight = cropArea.offsetHeight;\n            startLeft = cropArea.offsetLeft;\n            startTop = cropArea.offsetTop;\n            currentHandle = this;\n            document.addEventListener(\"mousemove\", resizeCropArea);\n            document.addEventListener(\"mouseup\", stopResizing);\n        });\n    });\n    function resizeCropArea(e) {\n        if (isResizing && currentHandle) {\n            const dx = e.clientX - startX;\n            const dy = e.clientY - startY;\n            let newWidth = startWidth;\n            let newHeight = startHeight;\n            // -------------------------------------------------- Adjust the width and height based on the handle being dragged\n            if (currentHandle.classList.contains(\"topLeft\")) {\n                newWidth = startWidth - dx;\n                newHeight = startHeight - dy;\n                cropArea.style.width = newWidth + \"px\";\n                cropArea.style.height = newHeight + \"px\";\n                cropArea.style.left = startLeft + dx + \"px\";\n                cropArea.style.top = startTop + dy + \"px\";\n            } else if (currentHandle.classList.contains(\"topRight\")) {\n                newWidth = startWidth + dx;\n                newHeight = startHeight - dy;\n                cropArea.style.width = newWidth + \"px\";\n                cropArea.style.height = newHeight + \"px\";\n                cropArea.style.top = startTop + dy + \"px\";\n            } else if (currentHandle.classList.contains(\"bottomLeft\")) {\n                newWidth = startWidth - dx;\n                newHeight = startHeight + dy;\n                cropArea.style.width = newWidth + \"px\";\n                cropArea.style.height = newHeight + \"px\";\n                cropArea.style.left = startLeft + dx + \"px\";\n            } else if (currentHandle.classList.contains(\"bottomRight\")) {\n                newWidth = startWidth + dx;\n                newHeight = startHeight + dy;\n                cropArea.style.width = newWidth + \"px\";\n                cropArea.style.height = newHeight + \"px\";\n            }\n        }\n    }\n    function stopResizing() {\n        isResizing = false;\n        currentHandle = null;\n        document.removeEventListener(\"mousemove\", resizeCropArea);\n        document.removeEventListener(\"mouseup\", stopResizing);\n    }\n    // -------------------------------------------------- Crop the image when the button is clicked\n    cropButton.addEventListener(\"click\", function() {\n        const image = document.querySelector(\"#imageToCrop\");\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n        // -------------------------------------------------- Calculate the scaling factor\n        const scaleX = image.naturalWidth / image.offsetWidth;\n        const scaleY = image.naturalHeight / image.offsetHeight;\n        // -------------------------------------------------- Adjust the cropping area based on the scaling factor\n        const adjustedCropArea = {\n            left: (cropArea.offsetLeft - image.offsetLeft) * scaleX,\n            top: (cropArea.offsetTop - image.offsetTop) * scaleY,\n            width: cropArea.offsetWidth * scaleX,\n            height: cropArea.offsetHeight * scaleY\n        };\n        // -------------------------------------------------- Set the canvas dimensions to the adjusted cropped area size\n        canvas.width = adjustedCropArea.width;\n        canvas.height = adjustedCropArea.height;\n        // -------------------------------------------------- Draw the cropped area on the canvas\n        context.drawImage(image, adjustedCropArea.left, adjustedCropArea.top, adjustedCropArea.width, adjustedCropArea.height, 0, 0, adjustedCropArea.width, adjustedCropArea.height);\n        // -------------------------------------------------- Convert the canvas to a data URL\n        const fileName = `Crop${Date.now()}.png`;\n        const fileType = \"image/png\";\n        const croppedImageDataURL = canvas.toDataURL(\"image/png\");\n        // -------------------------------------------------- Display the cropped image\n        const croppedImage = document.createElement(\"img\");\n        croppedImage.src = croppedImageDataURL;\n        createFileEntry(fileName, fileType, croppedImageDataURL, container);\n        toggleHide();\n        removeCropImage();\n    });\n});\n\n\n//# sourceMappingURL=index.8888cba9.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"5SCbD\\\",\\\"index.8888cba9.js\\\",\\\"5ZFkQ\\\",\\\"copy-w.315905f0.png\\\",\\\"ctiqG\\\",\\\"download-w2.88454de6.png\\\",\\\"jhLjc\\\",\\\"expand-arrows-w.79c8a13c.png\\\",\\\"aUa2Q\\\",\\\"minimize-arrows-w.e32ef0f5.png\\\",\\\"liXE3\\\",\\\"close-w.5e896fd7.png\\\"]\"));","import copyIconSrc from \"./img/copy-w.png\";\r\nimport downloadIconSrc from \"./img/download-w2.png\";\r\nimport expandIconSrc from \"./img/expand-arrows-w.png\";\r\nimport minimizeIconSrc from \"./img/minimize-arrows-w.png\";\r\nimport removeIconSrc from \"./img/close-w.png\";\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n\r\n  const dropArea = document.querySelector('#drop-zone');\r\n  const container = document.querySelector('#img-container');\r\n\r\n  const howtoModal = document.querySelector(\"#howto-container\");\r\n  const howtoButton = document.querySelector(\"#howto-btn\");\r\n  const closeHowto = document.querySelector('#close-howto');\r\n\r\n  const cropModal = document.querySelector(\"#crop-container\");\r\n  const closeCropModal = document.querySelector('#close-crop');\r\n  const cropArea = document.querySelector('#cropArea');\r\n  const cropButton = document.querySelector('#cropButton');\r\n  const resizeHandles = document.querySelectorAll('.resizeHandle');\r\n  \r\n  let isResizing = false;\r\n  let isMoving = false;\r\n  let startX, startY, startWidth, startHeight, startLeft, startTop;\r\n  let currentHandle = null;\r\n\r\n  let lastClickedDiv = null; \r\n  let unconvertedImages = 0;\r\n\r\n  // -------------------------------------------------- Drop and Drag\r\n  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\r\n      dropArea.addEventListener(eventName, preventDefaults, false);\r\n  });\r\n\r\n  ['dragenter', 'dragover'].forEach(eventName => {\r\n      dropArea.addEventListener(eventName, highlight, false);\r\n  });\r\n\r\n  ['dragleave', 'drop'].forEach(eventName => {\r\n      dropArea.addEventListener(eventName, unhighlight, false);\r\n  });\r\n\r\n  dropArea.addEventListener('drop', handleDrop, false);\r\n\r\n  function preventDefaults(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n  }\r\n\r\n  function highlight(e) {\r\n      dropArea.classList.add('dragover');\r\n  }\r\n\r\n  function unhighlight(e) {\r\n      dropArea.classList.remove('dragover');\r\n  }\r\n\r\n  function handleDrop(e) {\r\n      let dt = e.dataTransfer;\r\n      let files = dt.files;\r\n      handleFiles(files);\r\n\r\n  }\r\n\r\n  function handleFiles(files) {\r\n      ([...files]).forEach(uploadFile);\r\n  }\r\n\r\n  const textarea = document.createElement('textarea');\r\n  const resultDiv = document.querySelector('#result');\r\n\r\n  // -------------------------------------------------- Browse Files\r\n  document.querySelector('#img-upload').addEventListener('change', function(e) {\r\n    const files = e.target.files;\r\n\r\n    const container = document.querySelector('#img-container');\r\n    for (let i = 0; i < files.length; i++) {\r\n        const file = files[i];\r\n        uploadFile(file);\r\n    }\r\n\r\n  });\r\n\r\n  // -------------------------------------------------- Upload Files\r\n  function uploadFile(file) {\r\n      const reader = new FileReader();\r\n      reader.onload = function(e) {\r\n          const fileName = file.name;\r\n          const fileType = file.type;\r\n          const src = e.target.result;\r\n          createFileEntry(fileName, fileType, src);\r\n          toggleHide();\r\n      };\r\n      reader.readAsDataURL(file);\r\n  }\r\n\r\n  // -------------------------------------------------- Convert Button  \r\n  document.querySelector('#convert-btn').addEventListener('click', async function() {\r\n    const divContainers = document.querySelectorAll('.img-preview');\r\n    const convertBtn = document.querySelector('#convert-btn');\r\n    const text = convertBtn.querySelector('.convert-text');\r\n    convertBtn.disabled = true;\r\n    text.textContent = 'Converting...';\r\n\r\n    for (const div of divContainers) {\r\n\r\n      const img = div.querySelector('img');\r\n      const imageSrc = img.src;\r\n\r\n        if (img && !div.hasAttribute('converted') && !div.hasAttribute('invalid')) {\r\n          unconvertedImages--;\r\n          const id = div.id.replace('image', '');\r\n          const progressBar = document.createElement('div');\r\n          progressBar.id = 'progress-bar'+id;\r\n          progressBar.classList.add('progress-bar');\r\n\r\n          const bar = document.createElement('span');\r\n          bar.classList.add('bar');\r\n\r\n          const progress = document.createElement('span');\r\n          progress.classList.add('progress');\r\n\r\n          bar.appendChild(progress);\r\n          progressBar.appendChild(bar);\r\n\r\n          const imgContent = document.querySelector(`#img-content${id}`);\r\n          const message = imgContent.querySelector('.uploaded');\r\n          message.remove();\r\n          imgContent.appendChild(progressBar);\r\n\r\n          await sendImageToVisionAPI(imageSrc, id);\r\n      }\r\n    }\r\n\r\n    convertBtn.disabled = false;\r\n    text.textContent = 'Convert';\r\n    toggleHide();\r\n });\r\n\r\n  // -------------------------------------------------- Convert Image to Text\r\n  async function sendImageToVisionAPI(base64Image, currentImage) {\r\n    // const apiKey = 'QUl6YVN5Qnk5NjF5alNyNnVxM21RTGZKaEhzbVZVWXlTY0hFdDc4';\r\n    const apiUrl = `https://vision.googleapis.com/v1/images:annotate?key=${atob(process.env.apiKey)}`;\r\n\r\n    const requestBody = {\r\n      requests: [\r\n      {\r\n          image: {\r\n            content: base64Image.split(',')[1]\r\n          },\r\n          features: [\r\n            {\r\n              type: 'DOCUMENT_TEXT_DETECTION'\r\n            }\r\n          ]\r\n      }\r\n      ]\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n      });\r\n      const data = await response.json();\r\n\r\n      resultDiv.innerHTML = '';\r\n\r\n      if (data.responses && data.responses.length > 0) {\r\n        const annotations = data.responses[0].textAnnotations;\r\n\r\n        if (annotations && annotations.length > 0) {\r\n          contentBoard(currentImage, annotations);\r\n        } else {\r\n          noTextDetected(currentImage);\r\n        } \r\n        const progressBar = document.querySelector('#progress-bar'+currentImage);\r\n        progressBar.remove();\r\n        \r\n      } else {\r\n        resultDiv.textContent = 'Error processing the image.';\r\n      }\r\n\r\n    } catch (error) {\r\n      conversionFail(currentImage);\r\n      }\r\n  }\r\n\r\n  // -------------------------------------------------- Create uploaded item entries\r\n  function createFileEntry(fileName, fileType, src){\r\n    const id = Date.now();\r\n    const imgContent = document.createElement('div');\r\n    imgContent.id = `img-content${id}`;\r\n    imgContent.className = 'img-content-wrap';\r\n\r\n    const img = document.createElement('img');\r\n    img.className = 'img-selected';\r\n    img.setAttribute('uploaded', 'true');\r\n    img.draggable = false;\r\n    img.src = src;\r\n\r\n    const imgWrapper = document.createElement('div');\r\n    imgWrapper.className = 'img-wrapper';\r\n    imgWrapper.id = `container${id}`;\r\n    imgWrapper.addEventListener('click', () => selectedContainer(id));\r\n\r\n    const fileNameDiv = document.createElement('div');\r\n    const fileNameHolder = document.createElement('span');\r\n    fileNameDiv.className = 'file-name';\r\n    fileNameDiv.id = `file-name${id}`;\r\n    let imageName = fileName;\r\n\r\n    if (imageName.length > 31){\r\n      imageName = limitFilename(fileName);\r\n    }\r\n\r\n    fileNameHolder.textContent = imageName;\r\n    fileNameDiv.appendChild(fileNameHolder);\r\n    imgContent.appendChild(fileNameDiv);\r\n\r\n    const preview = document.createElement('div');\r\n    preview.className = 'img-preview';\r\n    preview.id = `image${id}`;\r\n    preview.appendChild(img);\r\n\r\n    \r\n    imgWrapper.appendChild(preview);\r\n    imgWrapper.appendChild(imgContent);\r\n\r\n    if (container.firstChild) {\r\n      container.insertBefore(imgWrapper, container.firstChild);\r\n    } else {\r\n      container.appendChild(imgWrapper);\r\n    }\r\n\r\n    isValidFile(fileType, preview, imgContent, src, id);\r\n\r\n    const removeDiv = removeBtn(id);\r\n    imgWrapper.appendChild(removeDiv);\r\n  }\r\n\r\n  // -------------------------------------------------- Check file validity\r\n  function isValidFile(fileType, preview, imgContent, src, id){\r\n    const isImage = fileType.startsWith('image/');\r\n    const message = document.createElement('span');\r\n    console.log(isImage);\r\n    if(!isImage){\r\n      console.log(\"invalid\");\r\n      preview.setAttribute('invalid', 'true');\r\n      message.className = 'error';\r\n      message.textContent = 'Invalid file.';\r\n      imgContent.appendChild(message);\r\n    }else{\r\n        unconvertedImages++;\r\n\r\n        const crop = document.createElement('span');\r\n        crop.textContent = 'crop';\r\n        preview.appendChild(crop);\r\n        preview.classList.add('crop');\r\n\r\n        message.className = 'uploaded';\r\n        message.textContent = 'File uploaded.';\r\n        imgContent.appendChild(message);\r\n        preview.addEventListener('click', function() {\r\n          croppingModal(src);\r\n        });\r\n    }\r\n  }\r\n\r\n  // -------------------------------------------------- format file name display\r\n  function limitFilename(filename) {\r\n    const lastDotIndex = filename.lastIndexOf('.');\r\n    const firstPart = filename.substring(0, 15);\r\n    const lastPart = filename.length > 10 ? filename.substring(filename.length - 10) : '';\r\n    return firstPart + '...' + lastPart;\r\n  }\r\n\r\n  // -------------------------------------------------- display identifier to selected item\r\n  function selectedContainer(id) {\r\n    const selectedContainer = document.querySelector(`#container${id}`);\r\n\r\n    if (lastClickedDiv && lastClickedDiv !== selectedContainer) {\r\n        lastClickedDiv.classList.toggle('shadow');\r\n    } else if (selectedContainer === null || selectedContainer === undefined){\r\n      return;\r\n    }\r\n\r\n    selectedContainer.classList.add('shadow');\r\n    lastClickedDiv = selectedContainer;\r\n  }\r\n\r\n  // -------------------------------------------------- Image converted\r\n  function uploadContent(id, content){\r\n    const img = document.querySelector(`#image${id}`);\r\n    img.setAttribute('converted', 'true');\r\n\r\n    const textarea = document.createElement('textarea');\r\n    textarea.innerHTML = content;\r\n    textarea.style.resize = 'none';\r\n    return textarea;\r\n  }\r\n\r\n  // -------------------------------------------------- Text Detection Error\r\n  function noTextDetected(id){\r\n    const img = document.querySelector(`#image${id}`);\r\n    img.setAttribute('converted', 'true');\r\n\r\n    const errorMsg = document.createElement('span');\r\n    errorMsg.textContent = 'No text detected.';\r\n    const imgContent = document.querySelector(`#img-content${id}`);\r\n    imgContent.appendChild(errorMsg);\r\n  }\r\n\r\n  // -------------------------------------------------- Conversion Fail Error\r\n  function conversionFail(id){\r\n    const img = document.querySelector(`#image${id}`);\r\n    img.setAttribute('converted', 'true');\r\n\r\n    const errorMsg = document.createElement('span');\r\n    errorMsg.textContent = 'Failed to convert. Check Internet Connection.';\r\n    const imgContent = document.querySelector(`#img-content${id}`);\r\n    imgContent.appendChild(errorMsg);\r\n\r\n    const progressBar = document.querySelector('#progress-bar'+id);\r\n    progressBar.remove();\r\n  }\r\n\r\n  // -------------------------------------------------- Create items buttons\r\n  function contentBoard(id, annotations){\r\n    const content = annotations[0].description;\r\n    const btnWrap = document.createElement('div');\r\n    btnWrap.className = 'btn-wrapper';\r\n\r\n    const textarea = uploadContent(id, content);\r\n    const copyAll = copyAllBtn(id, btnWrap);\r\n    const download = downloadBtn(id, btnWrap);\r\n    const expand = expandBtn(id, btnWrap);\r\n\r\n    const imgContent = document.querySelector(`#img-content${id}`);\r\n    imgContent.appendChild(textarea);\r\n    textarea.id = 'textarea'+id;\r\n    \r\n    btnWrap.appendChild(download);\r\n    btnWrap.appendChild(copyAll);\r\n    btnWrap.appendChild(expand);\r\n    \r\n    const title = document.querySelector(`#file-name${id}`);\r\n    title.classList.add('img-header');\r\n    title.appendChild(btnWrap);\r\n\r\n    const remove = document.querySelector(`#remove${id}`);\r\n    const removeDiv = remove.parentNode;\r\n    removeDiv.classList.add('move-top');\r\n  }\r\n\r\n  // -------------------------------------------------- Create copy all button\r\n  function copyAllBtn(id){\r\n    const copyAll = document.createElement('button');\r\n    copyAll.setAttribute('name', 'copy-btn');\r\n    copyAll.setAttribute('id', `copy${id}`);\r\n    copyAll.classList.add('copy-btn', 'tooltip');\r\n    const copyImg = document.createElement('img');\r\n    copyImg.src = copyIconSrc; \r\n    copyImg.alt = 'Copy All'; \r\n    copyAll.appendChild(copyImg);\r\n    const tooltipCopy = document.createElement('span');\r\n    tooltipCopy.className = 'tooltiptext';\r\n    tooltipCopy.textContent = 'Copy';\r\n    copyAll.appendChild(tooltipCopy);\r\n    copyAll.addEventListener('click', function() {\r\n      copyAllText(id);\r\n    });\r\n    return copyAll;\r\n  }\r\n\r\n  // -------------------------------------------------- copy all items\r\n  function copyAllText(id) {\r\n    const text = document.querySelector(`#textarea${id}`).value;\r\n\r\n    navigator.clipboard.writeText(text).then(function() {\r\n    }).catch(function(err) {\r\n      alert('Failed to copy text: ', err);\r\n    });\r\n    \r\n    copiedAnimation(id);\r\n  }\r\n\r\n  // -------------------------------------------------- copied animation\r\n  function copiedAnimation(id){\r\n    const button = document.querySelector(`#copy${id}`);\r\n    const img = button.querySelector('img');\r\n    img.className = 'tick-img';\r\n    img.style.animation = 'none';\r\n    void img.offsetWidth;\r\n    img.style.animation = 'checkAnimation 0.5s ease-out forwards';\r\n    img.style.display = 'block';\r\n    img.src = 'img/tick-w.png'; \r\n\r\n    setTimeout(function(id) {\r\n        img.src = 'img/copy-w.png'; \r\n    }, 1000);\r\n  }\r\n\r\n  // -------------------------------------------------- create download button\r\n  function downloadBtn(id){\r\n    const download = document.createElement('button');\r\n    download.setAttribute('name', 'dload-btn');\r\n    download.setAttribute('id', `dload${id}`);\r\n    download.classList.add('download-btn', 'tooltip');\r\n    const downloadImg = document.createElement('img');\r\n    downloadImg.src = downloadIconSrc; \r\n    downloadImg.alt = 'Download Text FIle'; \r\n    download.appendChild(downloadImg);\r\n    const tooltipDownload = document.createElement('span');\r\n    tooltipDownload.className = 'tooltiptext';\r\n    tooltipDownload.textContent = 'Download';\r\n    download.appendChild(tooltipDownload);\r\n    download.addEventListener('click', function() {\r\n      downloadTextFile(id);\r\n    });\r\n    return download;\r\n  }\r\n\r\n  // -------------------------------------------------- create text file for download button\r\n  function downloadTextFile(id) {\r\n    const textContent = document.querySelector(`#textarea${id}`).value;\r\n    const blob = new Blob([textContent], { type: 'text/plain' });\r\n    const url = window.URL.createObjectURL(blob);\r\n\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'text_document.txt';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  // -------------------------------------------------- create expand button\r\n  function expandBtn(id){\r\n    const expand = document.createElement('button');\r\n    expand.setAttribute('name', 'expand-btn');\r\n    expand.setAttribute('id', `expand${id}`);\r\n    expand.classList.add('expand-btn', 'tooltip');\r\n    const expandImg = document.createElement('img');\r\n    expandImg.src = expandIconSrc; \r\n    expandImg.alt = 'Expand'; \r\n    expand.appendChild(expandImg);\r\n    const tooltipExpand = document.createElement('span');\r\n    tooltipExpand.className = 'tooltiptext';\r\n    tooltipExpand.textContent = 'Expand';\r\n    expand.appendChild(tooltipExpand);\r\n    expand.addEventListener('click', function() {\r\n      expandTextArea(id);\r\n    });\r\n    return expand;\r\n  }\r\n\r\n  // -------------------------------------------------- expanding and minimizing text area\r\n  function expandTextArea(id){\r\n    const textarea = document.querySelector(`#textarea${id}`);\r\n    const expandMinimizeBtn = document.querySelector(`#expand${id}`);\r\n    const img = expandMinimizeBtn.querySelector('img');\r\n    const tooltip = expandMinimizeBtn.querySelector('.tooltiptext');\r\n    if (textarea.scrollHeight <= textarea.clientHeight && textarea.scrollHeight <= 70){\r\n    return;\r\n    }\r\n    else if (textarea.style.height === '70px' || textarea.style.height === '') {\r\n      textarea.style.height = 'auto'; \r\n      textarea.style.height = textarea.scrollHeight + 'px';\r\n      img.src = minimizeIconSrc; \r\n      tooltip.textContent = 'Minimize';\r\n\r\n    } else {\r\n        textarea.style.height = '70px';\r\n        img.src = expandIconSrc; \r\n        tooltip.textContent = 'Expand';\r\n    }\r\n  } \r\n\r\n  // -------------------------------------------------- create remove button\r\n  function removeBtn(id){\r\n    const remove = document.createElement('button');\r\n    remove.setAttribute('name', 'remove-btn');\r\n    remove.setAttribute('id', `remove${id}`);\r\n    remove.classList.add('remove-btn', 'tooltip');\r\n    const removeImg = document.createElement('img');\r\n    removeImg.src = removeIconSrc; \r\n    removeImg.alt = 'Remove file'; \r\n    remove.appendChild(removeImg);\r\n    const tooltip = document.createElement('span');\r\n    tooltip.className = 'tooltiptext';\r\n    tooltip.textContent = 'Remove';\r\n    remove.appendChild(tooltip);\r\n    remove.addEventListener('click', function() {\r\n      removeFile(id);\r\n    });\r\n    const removeDiv = document.createElement('div');\r\n    removeDiv.className = 'remove-wrapper';\r\n    removeDiv.appendChild(remove);\r\n    return removeDiv\r\n  }\r\n\r\n  // -------------------------------------------------- remove item\r\n  function removeFile(id) {\r\n    const divToRemove = document.querySelector(`#container${id}`);\r\n    const imgDiv = document.querySelector(`#image${id}`);\r\n    const isInvalid = imgDiv.getAttribute('invalid');\r\n    const isConverted = imgDiv.getAttribute('converted');\r\n    const errorMsg = document.querySelector('#result');\r\n    if (!isConverted && !isInvalid){\r\n      unconvertedImages--;\r\n    }\r\n\r\n    if (divToRemove) {\r\n      if(lastClickedDiv !== null){\r\n        lastClickedDiv.classList.remove('shadow');\r\n        lastClickedDiv = null;\r\n      }\r\n        divToRemove.remove();\r\n    }\r\n\r\n    errorMsg.textContent = '';\r\n    toggleHide();\r\n  }\r\n\r\n  // -------------------------------------------------- hide convert button\r\n  function toggleHide(){\r\n    const convertBtn = document.querySelector('.convert-btn');\r\n    const tooltip = convertBtn.querySelector('.tooltiptext-error');\r\n\r\n    if (unconvertedImages === 0){\r\n      if (tooltip.classList.contains('hidden')) {\r\n        tooltip.classList.toggle('hidden');\r\n      }\r\n\r\n      convertBtn.disabled = true;\r\n\r\n    }else{\r\n      if (convertBtn.classList.contains('hidden')) {\r\n        convertBtn.classList.toggle('hidden');\r\n      }\r\n\r\n      if (!(tooltip.classList.contains('hidden'))) {\r\n        tooltip.classList.toggle('hidden');\r\n      }\r\n\r\n      convertBtn.disabled = false;\r\n    }\r\n  }\r\n\r\n  // -------------------------------------------------- How to Use Modal\r\n  howtoButton.addEventListener('click', function() {\r\n    howtoModal.style.display = \"block\";\r\n  });\r\n\r\n  closeHowto.addEventListener('click', function() {\r\n    howtoModal.style.display = \"none\";\r\n  });\r\n\r\n  window.addEventListener('click', function(event) {\r\n    if (event.target == howtoModal) {\r\n      howtoModal.style.display = \"none\";\r\n    }\r\n  });\r\n\r\n  // -------------------------------------------------- Crop Modal\r\n  closeCropModal.addEventListener('click', function() {\r\n    removeCropImage();\r\n  });\r\n\r\n  window.addEventListener('click', function(event) {\r\n    if (event.target == cropModal) {\r\n      removeCropImage();\r\n    }\r\n  });\r\n\r\n  // -------------------------------------------------- Set crop modal\r\n  function croppingModal(src){\r\n    cropArea.style.width = '75%';\r\n    cropArea.style.height = '75%';\r\n    cropArea.style.left = '20px';\r\n    cropArea.style.top = '20px';\r\n\r\n\r\n    const img = document.createElement('img');\r\n    img.className = 'img-selected';\r\n    img.setAttribute('uploaded', 'true');\r\n    img.draggable = false;\r\n    img.src = src;\r\n    img.id = 'imageToCrop';\r\n\r\n    const container = document.querySelector('.image-to-crop-container');\r\n    container.insertBefore(img, container.firstChild);\r\n    cropModal.style.display = \"block\";\r\n  }\r\n\r\n  // -------------------------------------------------- Reset Crop Modal\r\n  function removeCropImage(){\r\n    cropModal.style.display = \"none\";\r\n    const container = document.querySelector('.image-to-crop-container');\r\n    const image = document.querySelector('#imageToCrop');\r\n    container.removeChild(image);\r\n  }\r\n\r\n  // -------------------------------------------------- Make the crop area movable\r\n  cropArea.addEventListener('mousedown', function(e) {\r\n      if (e.target === cropArea) {\r\n          isMoving = true;\r\n          startX = e.clientX - cropArea.offsetLeft;\r\n          startY = e.clientY - cropArea.offsetTop;\r\n          document.addEventListener('mousemove', moveCropArea);\r\n          document.addEventListener('mouseup', stopMoving);\r\n      }\r\n  });\r\n\r\n  function moveCropArea(e) {\r\n      if (isMoving) {\r\n          const x = e.clientX - startX;\r\n          const y = e.clientY - startY;\r\n          cropArea.style.left = x + 'px';\r\n          cropArea.style.top = y + 'px';\r\n      }\r\n  }\r\n\r\n  function stopMoving() {\r\n      isMoving = false;\r\n      document.removeEventListener('mousemove', moveCropArea);\r\n      document.removeEventListener('mouseup', stopMoving);\r\n  }\r\n\r\n  resizeHandles.forEach(handle => {\r\n    handle.addEventListener('mousedown', function(e) {\r\n      isResizing = true;\r\n      startX = e.clientX;\r\n      startY = e.clientY;\r\n      startWidth = cropArea.offsetWidth;\r\n      startHeight = cropArea.offsetHeight;\r\n      startLeft = cropArea.offsetLeft;\r\n      startTop = cropArea.offsetTop;\r\n      currentHandle = this;\r\n      document.addEventListener('mousemove', resizeCropArea);\r\n      document.addEventListener('mouseup', stopResizing);\r\n    });\r\n  });\r\n\r\n  function resizeCropArea(e) {\r\n    if (isResizing && currentHandle) {\r\n      const dx = e.clientX - startX;\r\n      const dy = e.clientY - startY;\r\n      let newWidth = startWidth;\r\n      let newHeight = startHeight;\r\n\r\n      // -------------------------------------------------- Adjust the width and height based on the handle being dragged\r\n      if (currentHandle.classList.contains('topLeft')) {\r\n          newWidth = startWidth - dx;\r\n          newHeight = startHeight - dy;\r\n          cropArea.style.width = newWidth + 'px';\r\n          cropArea.style.height = newHeight + 'px';\r\n          cropArea.style.left = (startLeft + dx) + 'px';\r\n          cropArea.style.top = (startTop + dy) + 'px';\r\n      } else if (currentHandle.classList.contains('topRight')) {\r\n          newWidth = startWidth + dx;\r\n          newHeight = startHeight - dy;\r\n          cropArea.style.width = newWidth + 'px';\r\n          cropArea.style.height = newHeight + 'px';\r\n          cropArea.style.top = (startTop + dy) + 'px';\r\n      } else if (currentHandle.classList.contains('bottomLeft')) {\r\n          newWidth = startWidth - dx;\r\n          newHeight = startHeight + dy;\r\n          cropArea.style.width = newWidth + 'px';\r\n          cropArea.style.height = newHeight + 'px';\r\n          cropArea.style.left = (startLeft + dx) + 'px';\r\n      } else if (currentHandle.classList.contains('bottomRight')) {\r\n          newWidth = startWidth + dx;\r\n          newHeight = startHeight + dy;\r\n          cropArea.style.width = newWidth + 'px';\r\n          cropArea.style.height = newHeight + 'px';\r\n      }\r\n    }\r\n  }\r\n\r\n  function stopResizing() {\r\n    isResizing = false;\r\n    currentHandle = null; \r\n    document.removeEventListener('mousemove', resizeCropArea);\r\n    document.removeEventListener('mouseup', stopResizing);\r\n  }\r\n\r\n// -------------------------------------------------- Crop the image when the button is clicked\r\n  cropButton.addEventListener('click', function() {\r\n    const image = document.querySelector('#imageToCrop');\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n\r\n    // -------------------------------------------------- Calculate the scaling factor\r\n    const scaleX = image.naturalWidth / image.offsetWidth;\r\n    const scaleY = image.naturalHeight / image.offsetHeight;\r\n\r\n    // -------------------------------------------------- Adjust the cropping area based on the scaling factor\r\n    const adjustedCropArea = {\r\n        left: (cropArea.offsetLeft - image.offsetLeft) * scaleX,\r\n        top: (cropArea.offsetTop - image.offsetTop) * scaleY,\r\n        width: cropArea.offsetWidth * scaleX,\r\n        height: cropArea.offsetHeight * scaleY\r\n    };\r\n\r\n    // -------------------------------------------------- Set the canvas dimensions to the adjusted cropped area size\r\n    canvas.width = adjustedCropArea.width;\r\n    canvas.height = adjustedCropArea.height;\r\n\r\n    // -------------------------------------------------- Draw the cropped area on the canvas\r\n    context.drawImage(image, adjustedCropArea.left, adjustedCropArea.top, adjustedCropArea.width, adjustedCropArea.height, 0, 0, adjustedCropArea.width, adjustedCropArea.height);\r\n\r\n    // -------------------------------------------------- Convert the canvas to a data URL\r\n    const fileName =`Crop${Date.now()}.png`;\r\n    const fileType = 'image/png';\r\n    const croppedImageDataURL = canvas.toDataURL('image/png');\r\n\r\n    // -------------------------------------------------- Display the cropped image\r\n    const croppedImage = document.createElement('img');\r\n    croppedImage.src = croppedImageDataURL;\r\n    createFileEntry(fileName, fileType, croppedImageDataURL, container);\r\n    toggleHide();\r\n    removeCropImage();\r\n  });\r\n\r\n});\r\n","module.exports = new __parcel__URL__(\"copy-w.315905f0.png\").toString();","module.exports = new __parcel__URL__(\"download-w2.88454de6.png\").toString();","module.exports = new __parcel__URL__(\"expand-arrows-w.79c8a13c.png\").toString();","module.exports = new __parcel__URL__(\"minimize-arrows-w.e32ef0f5.png\").toString();","module.exports = new __parcel__URL__(\"close-w.5e896fd7.png\").toString();"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$26268f7546ab038c$exports","$48ae25e6176b1777$exports","$d4748b78fbc2b0d0$exports","$608cbf9e4ac600bc$exports","$aafbeb1f91a156f6$exports","document","addEventListener","startX","startY","startWidth","startHeight","startLeft","startTop","dropArea","querySelector","container","howtoModal","howtoButton","closeHowto","cropModal","closeCropModal","cropArea","cropButton","resizeHandles","querySelectorAll","isResizing","isMoving","currentHandle","lastClickedDiv","unconvertedImages","preventDefaults","e","preventDefault","stopPropagation","highlight","classList","add","unhighlight","remove","forEach","eventName","handleFiles","files","uploadFile","dt","dataTransfer","createElement","resultDiv","file","reader","FileReader","onload","createFileEntry","name","type","target","result","toggleHide","readAsDataURL","sendImageToVisionAPI","base64Image","currentImage","apiUrl","atob","requestBody","requests","image","content","split","features","response","fetch","method","headers","body","stringify","data","json","innerHTML","responses","annotations","textAnnotations","contentBoard","description","btnWrap","className","textarea","uploadContent","img","setAttribute","style","resize","copyAll","copyAllBtn","copyImg","src","alt","appendChild","tooltipCopy","textContent","copyAllText","text","value","navigator","clipboard","writeText","then","catch","alert","copiedAnimation","button","animation","offsetWidth","display","setTimeout","download","downloadBtn","downloadImg","tooltipDownload","downloadTextFile","blob","Blob","window","createObjectURL","href","click","revokeObjectURL","expand","expandBtn","expandImg","tooltipExpand","expandTextArea","expandMinimizeBtn","tooltip","scrollHeight","clientHeight","height","imgContent","title","removeDiv","parentNode","noTextDetected","errorMsg","progressBar","error","conversionFail","fileName","fileType","Date","now","draggable","imgWrapper","selectedContainer","toggle","fileNameDiv","fileNameHolder","imageName","filename","lastIndexOf","firstPart","substring","preview","firstChild","insertBefore","isValidFile","isImage","startsWith","message","console","log","crop","croppingModal","width","left","top","removeBtn","removeImg","removeFile","divToRemove","imgDiv","isInvalid","getAttribute","isConverted","convertBtn","contains","disabled","removeCropImage","removeChild","moveCropArea","x","clientX","y","clientY","stopMoving","removeEventListener","resizeCropArea","dx","dy","newWidth","newHeight","stopResizing","divContainers","div","imageSrc","hasAttribute","replace","bar","progress","event","offsetLeft","offsetTop","handle","offsetHeight","canvas","context","getContext","scaleX","naturalWidth","scaleY","naturalHeight","adjustedCropArea","drawImage","croppedImageDataURL","toDataURL","croppedImage"],"version":3,"file":"index.8888cba9.js.map"}